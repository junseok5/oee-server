type AdminCheckResponse {
  ok: Boolean!
  error: String
}

type Query {
  AdminCheck: AdminCheckResponse
  GetFavoriteVideoList(page: Int!, num: Int!): GetFavoriteVideoListResponse
  GetVideo(id: String!): GetVideoResponse!
  GetVideoList(page: Int!, tag: String, keyword: String, level: String): GetVideoListResponse
}

type AdminLoginResponse {
  ok: Boolean!
  error: String
}

type Mutation {
  AdminLogin(password: String!): AdminLoginResponse
  AdminLogout: AdminLogoutResponse
  SocialLogin(provider: String!, accessToken: String!): SocialLoginResponse
  AddFavoriteVideo(videoId: String!): AddFavoriteVideoResponse
  DeleteFavoriteVideo(id: String!): DeleteFavoriteVideoResponse
  AddVideo(youtubeId: String!, title: String!, overayTime: String!, tags: [String], level: String!, isPublic: Boolean!, transcript: [Script]!): AddVideoResponse
  DeleteVideo(id: String!): DeleteVideoResponse
  EditVideo(id: String!, patchData: VideoPatch!): EditVideoResponse
}

type AdminLogoutResponse {
  ok: Boolean!
  error: String
}

type SocialLoginResponse {
  ok: Boolean!
  error: String
  token: String
}

type User {
  _id: String!
  email: String!
  fbId: String
  fbToken: String
  googleId: String
  googleToken: String
  displayName: String!
  thumbnail: String!
  createdAt: String!
  updatedAt: String!
}

type AddFavoriteVideoResponse {
  ok: Boolean!
  error: String
}

type DeleteFavoriteVideoResponse {
  ok: Boolean!
  error: String
}

type FavoriteVideo {
  _id: String!
  user: String!
  video: String!
  createdAt: String!
}

type GetFavoriteVideoListResponse {
  ok: Boolean!
  error: String
  videos: [FavoriteVideo]
}

type AddVideoResponse {
  ok: Boolean!
  error: String
}

input Script {
  start: Float!
  end: Float!
  textContent: String!
}

type DeleteVideoResponse {
  ok: Boolean!
  error: String
}

type EditVideoResponse {
  ok: Boolean!
  error: String
}

input VideoPatch {
  title: String
  overayTime: String
  tags: [String]
  level: String
  isPublic: Boolean
}

type GetVideoResponse {
  ok: Boolean!
  error: String
  video: Video
}

type GetVideoListResponse {
  ok: Boolean!
  error: String
  videos: [Video]
  pageCount: Int!
}

type ScriptType {
  start: Float!
  end: Float!
  textContent: String!
}

type Subtitle {
  _id: String!
  transcript: [ScriptType]
}

type Video {
  _id: String!
  youtubeId: String!
  title: String!
  overayTime: String!
  tags: [String]
  level: String!
  isPublic: Boolean!
  views: Int!
  subtitle: Subtitle!
  createdAt: String!
  updatedAt: String!
}
